{"version":3,"sources":["../../app/config/constants.js"],"names":["defaultConfig","env","process","NODE_ENV","envs","test","development","production","version","require","root","normalize","__dirname","port","PORT","ip","IP","apiPrefix","userRoles","mongo","seed","options","db","safe","security","sessionSecret","SESSION_SECRET","sessionExpiration","SESSION_EXPIRATION","saltRounds","SALT_ROUNDS","environmentConfigs","uri","MONGO_URI"],"mappings":";;;;;;AAEA;;;;AACA;;;;;;AAEA;AACA,IAAMA,gBAAgB;AACpBC,OAAKC,QAAQD,GAAR,CAAYE,QADG;AAEpB,MAAIC,IAAJ,GAAW;AACT,WAAO;AACLC,YAAMH,QAAQD,GAAR,CAAYE,QAAZ,KAAyB,MAD1B;AAELG,mBAAaJ,QAAQD,GAAR,CAAYE,QAAZ,KAAyB,aAFjC;AAGLI,kBAAYL,QAAQD,GAAR,CAAYE,QAAZ,KAAyB;AAHhC,KAAP;AAKD,GARmB;;AAUpBK,WAASC,QAAQ,oBAAR,EAA8BD,OAVnB;AAWpBE,QAAM,eAAKC,SAAL,CAAeC,YAAY,WAA3B,CAXc;AAYpBC,QAAMX,QAAQD,GAAR,CAAYa,IAAZ,IAAoB,IAZN;AAapBC,MAAIb,QAAQD,GAAR,CAAYe,EAAZ,IAAkB,SAbF;AAcpBC,aAAW,EAdS,EAcL;AACfC,aAAW,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,CAfS;;AAiBpB;;;AAGAC,SAAO;AACLC,UAAM,IADD;AAELC,aAAS;AACPC,UAAI;AACFC,cAAM;AADJ;AADG;AAFJ,GApBa;;AA6BpB;;;AAGAC,YAAU;AACRC,mBAAevB,QAAQD,GAAR,CAAYyB,cAAZ,IAA8B,qBADrC;AAERC,uBAAmBzB,QAAQD,GAAR,CAAY2B,kBAAZ,IAAkC,KAAK,EAAL,GAAU,EAAV,GAAe,CAF5D,EAE+D;AACvEC,gBAAY3B,QAAQD,GAAR,CAAY6B,WAAZ,IAA2B;AAH/B;AAhCU,CAAtB;;AAuCA;AACA,IAAMC,qBAAqB;AACzBzB,eAAa;AACXa,WAAO;AACLa,WAAK9B,QAAQD,GAAR,CAAYgC,SAAZ,IAAyB;AADzB,KADI;AAIXT,cAAU;AACRK,kBAAY;AADJ;AAJC,GADY;AASzBxB,QAAM;AACJQ,UAAM,IADF;AAEJM,WAAO;AACLa,WAAK9B,QAAQD,GAAR,CAAYgC,SAAZ,IAAyB;AADzB,KAFH;AAKJT,cAAU;AACRK,kBAAY;AADJ;AALN,GATmB;AAkBzBtB,cAAY;AACVY,WAAO;AACLC,YAAM,KADD;AAELY,WAAK9B,QAAQD,GAAR,CAAYgC;AAFZ;AADG;AAlBa,CAA3B;;AA0BA;kBACe,qBAAMjC,aAAN,EAAqB+B,mBAAmB7B,QAAQD,GAAR,CAAYE,QAA/B,KAA4C,EAAjE,C","file":"constants.js","sourcesContent":["/* @flow */\n\nimport path from 'path';\nimport merge from 'lodash/merge';\n\n// Default configuations applied to all environments\nconst defaultConfig = {\n  env: process.env.NODE_ENV,\n  get envs() {\n    return {\n      test: process.env.NODE_ENV === 'test',\n      development: process.env.NODE_ENV === 'development',\n      production: process.env.NODE_ENV === 'production',\n    };\n  },\n\n  version: require('../../package.json').version,\n  root: path.normalize(__dirname + '/../../..'),\n  port: process.env.PORT || 4567,\n  ip: process.env.IP || '0.0.0.0',\n  apiPrefix: '', // Could be /api/resource or /api/v2/resource\n  userRoles: ['guest', 'user', 'admin'],\n\n  /**\n   * MongoDB configuration options\n   */\n  mongo: {\n    seed: true,\n    options: {\n      db: {\n        safe: true,\n      },\n    },\n  },\n\n  /**\n   * Security configuation options regarding sessions, authentication and hashing\n   */\n  security: {\n    sessionSecret: process.env.SESSION_SECRET || 'i-am-the-secret-key',\n    sessionExpiration: process.env.SESSION_EXPIRATION || 60 * 60 * 24 * 7, // 1 week\n    saltRounds: process.env.SALT_ROUNDS || 12,\n  },\n};\n\n// Environment specific overrides\nconst environmentConfigs = {\n  development: {\n    mongo: {\n      uri: process.env.MONGO_URI || 'mongodb://localhost/content-dev',\n    },\n    security: {\n      saltRounds: 4,\n    },\n  },\n  test: {\n    port: 5678,\n    mongo: {\n      uri: process.env.MONGO_URI || 'mongodb://localhost/content-test',\n    },\n    security: {\n      saltRounds: 4,\n    },\n  },\n  production: {\n    mongo: {\n      seed: false,\n      uri: process.env.MONGO_URI,\n    },\n  },\n};\n\n// Recursively merge configurations\nexport default merge(defaultConfig, environmentConfigs[process.env.NODE_ENV] || {});\n"]}