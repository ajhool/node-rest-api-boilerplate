{"version":3,"sources":["../../app/controllers/posts.controller.js"],"names":["PostController","whitelist","_populate","req","res","next","id","params","findById","post","err","Error","status","name","search","find","populate","path","select","posts","json","fetch","create","filterParams","body","_user","currentUser","_id","save","delete","toString","remove","sendStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;IAEMA,c;;;;;;;;;;;;;;;oNAEJC,S,GAA4B,CAC1B,MAD0B,C,QAK5BC,S;6EAAY,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,kBADE,GACKH,IAAII,MADT,CACFD,EADE;AAAA;AAAA;AAAA,uBAIW,eAAKE,QAAL,CAAcF,EAAd,CAJX;;AAAA;AAIFG,oBAJE;;AAAA,oBAMHA,IANG;AAAA;AAAA;AAAA;;AAOAC,mBAPA,GAOM,IAAIC,KAAJ,CAAU,iBAAV,CAPN;;AAQND,oBAAIE,MAAJ,GAAa,GAAb;AARM,iDASCP,KAAKK,GAAL,CATD;;AAAA;;AAYRP,oBAAIM,IAAJ,GAAWA,IAAX;AACAJ;AAbQ;AAAA;;AAAA;AAAA;AAAA;;AAeR,4BAAIO,MAAJ,GAAa,YAAIC,IAAJ,KAAY,WAAZ,GAA0B,GAA1B,GAAgC,GAA7C;AACAR;;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eAoBZS,M;6EAAS,kBAAOX,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGG,eAAKU,IAAL,CAAU,EAAV,EACKC,QADL,CACc,EAAEC,MAAM,OAAR,EAAiBC,QAAQ,cAAzB,EADd,CAHH;;AAAA;AAECC,qBAFD;;;AAMLf,oBAAIgB,IAAJ,CAASD,KAAT;AANK;AAAA;;AAAA;AAAA;AAAA;;AAQLd;;AARK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eAgBTgB,K,GAAQ,UAAClB,GAAD,EAAMC,GAAN,EAAc;AACpBA,UAAIgB,IAAJ,CAASjB,IAAIM,IAAb;AACD,K,QAMDa,M;6EAAS,kBAAOnB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDE,sBADC,GACQ,MAAKgB,YAAL,CAAkBpB,IAAIqB,IAAtB,EAA4B,MAAKvB,SAAjC,CADR;AAGDQ,oBAHC,GAGM,8CACRF,MADQ;AAEXkB,yBAAOtB,IAAIuB,WAAJ,CAAgBC;AAFZ,mBAHN;AAAA;AAAA,+BASLvB,IAAIQ,MAAJ,CAAW,GAAX,CATK;AAAA;AAAA,uBASsBH,KAAKmB,IAAL,EATtB;;AAAA;AAAA;;AAAA,6BASWR,IATX;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWLf;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;eAeTwB,M;6EAAS,kBAAO1B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMHF,IAAIM,IAAJ,CAASgB,KAAT,CAAeK,QAAf,OAA8B3B,IAAIuB,WAAJ,CAAgBC,GAAhB,CAAoBG,QAApB,EAN3B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAQG3B,IAAIM,IAAJ,CAASsB,MAAT,EARH;;AAAA;AASH3B,oBAAI4B,UAAJ,CAAe,GAAf;AATG;AAAA;;AAAA;AAAA;AAAA;;AAWH3B;;AAXG;AAAA;AAAA;;AAAA;AAcLD,oBAAI4B,UAAJ,CAAe,GAAf;;AAdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AA5DR;;;AAiCD;;;;AAQA;;;;;;;kBAsCa,IAAIhC,cAAJ,E","file":"posts.controller.js","sourcesContent":["/* @flow */\n\nimport BaseController from './base.controller'\nimport Post from '../models/post'\n\nclass PostController extends BaseController {\n\n  whitelist : Array<string> = [\n    'text',\n  ]\n\n   // Middleware to populate post based on url param\n  _populate = async (req, res, next) => {\n    const { id } = req.params\n\n    try {\n      const post = await Post.findById(id)\n\n      if (!post) {\n        const err = new Error('Post not found.')\n        err.status = 404\n        return next(err)\n      }\n\n      req.post = post\n      next()\n    } catch(err) {\n      err.status = err.name ==='CastError' ? 404 : 500\n      next(err)\n    }\n  }\n\n  search = async (req, res, next) => {\n    try {\n      const posts =\n        await Post.find({})\n                  .populate({ path: '_user', select: '-posts -role' })\n\n      res.json(posts);\n    } catch(err) {\n      next(err);\n    }\n  }\n\n  /**\n   * req.post is populated by middleware in routes.js\n   */\n\n  fetch = (req, res) => {\n    res.json(req.post)\n  }\n\n  /**\n   * req.user is populated by middleware in routes.js\n   */\n\n  create = async (req, res, next) => {\n    const params = this.filterParams(req.body, this.whitelist)\n\n    const post = new Post({\n      ...params,\n      _user: req.currentUser._id,\n    });\n\n    try {\n      res.status(201).json(await post.save())\n    } catch(err) {\n      next(err)\n    }\n  }\n\n  delete = async (req, res, next) => {\n    /**\n     * Ensure the user attempting to delete the post owns the post\n     *\n     * ~~ toString() converts objectIds to normal strings\n     */\n    if (req.post._user.toString() === req.currentUser._id.toString()) {\n      try {\n        await req.post.remove()\n        res.sendStatus(204)\n      } catch(err) {\n        next(err)\n      }\n    } else {\n      res.sendStatus(403)\n    }\n  }\n}\n\nexport default new PostController()\n"]}